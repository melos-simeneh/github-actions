name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18", "20", "21"]
    defaults:
      run:
        working-directory: nodejs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: |
          npm test -- --coverage --coverageReporters=json-summary
          npm run test:ci  # If you have a separate CI test script

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()

      - name: Store test results
        if: always()
        run: |
          mkdir -p test-results
          [ -f coverage/coverage-summary.json ] && cp coverage/coverage-summary.json test-results/
          [ -f test-output.xml ] && cp test-output.xml test-results/ || echo "No JUnit output found"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4 # Updated to v4
        if: always()
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            test-results/
            coverage/
          retention-days: 7
          compression-level: 9 # Better compression

      - name: Install jq if needed
        if: always()
        run: sudo apt-get install -y jq

      - name: Generate summary
        if: always()
        run: |
          echo '### ðŸ“Š Test Results' >> $GITHUB_STEP_SUMMARY
          echo "**Node Version:** ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY

          if [ -f coverage/coverage-summary.json ]; then
            echo '### Coverage Summary' >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            jq -r '.total' coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo 'No coverage data available' >> $GITHUB_STEP_SUMMARY
          fi
